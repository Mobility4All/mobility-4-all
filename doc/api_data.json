[  {    "type": "put",    "url": "/driver/geolocation",    "title": "Update Driver Geolocation",    "name": "DriverGeolocation",    "group": "Driver",    "version": "1.0.0",    "permission": [      {        "name": "user-driver"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "geolocation",            "description": "<p>Drivers latitude and longitude from HTML5 geolocation request.</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "req.user.id",            "description": "<p>Drivers id.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/driver.router.js",    "groupTitle": "Driver",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ],        "Error 5xx": [          {            "group": "Error 5xx",            "optional": false,            "field": "ServerError",            "description": "<p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/driver/live",    "title": "Update Driver Status to Live and set Socket Id",    "name": "DriverLiveStatus",    "group": "Driver",    "version": "1.0.0",    "permission": [      {        "name": "user-driver"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "req.socket.id",            "description": "<p>Drivers socket id, passed through on req.</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "req.user.id",            "description": "<p>Drivers user id, passed through on req.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/driver.router.js",    "groupTitle": "Driver",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ],        "Error 5xx": [          {            "group": "Error 5xx",            "optional": false,            "field": "ServerError",            "description": "<p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/driver/profilephoto",    "title": "Update Driver Profile Photo",    "name": "DriverProfilePhoto",    "group": "Driver",    "version": "1.0.0",    "permission": [      {        "name": "user-driver"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "driver_photo_url",            "description": "<p>Drivers profile photo.</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "req.user.id",            "description": "<p>Drivers id.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/driver.router.js",    "groupTitle": "Driver",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ],        "Error 5xx": [          {            "group": "Error 5xx",            "optional": false,            "field": "ServerError",            "description": "<p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/driver/unlive",    "title": "Update Driver Status to Unlive",    "name": "DriverUnLiveStatus",    "group": "Driver",    "version": "1.0.0",    "permission": [      {        "name": "user-driver"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "req.user.id",            "description": "<p>Drivers user id, passed through on req.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/driver.router.js",    "groupTitle": "Driver",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ],        "Error 5xx": [          {            "group": "Error 5xx",            "optional": false,            "field": "ServerError",            "description": "<p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/driver/update",    "title": "Update Driver Profile",    "name": "DriverUpdate",    "group": "Driver",    "version": "1.0.0",    "permission": [      {        "name": "user-driver"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "first_name",            "description": "<p>Drivers first name.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "last_name",            "description": "<p>Drivers last name.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Drivers email address.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "phone",            "description": "<p>Drivers cell phone.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "street",            "description": "<p>Drivers street.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "city",            "description": "<p>Drivers city.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "state",            "description": "<p>Drivers state.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "make",            "description": "<p>Drivers vehicle make.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "model",            "description": "<p>Drivers vehicle model.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "license",            "description": "<p>num Drivers vehicle license num.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "elec_wheelchair",            "description": "<p>Does driver accomdate riders with: elec_wheelchair.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "col_wheelchair",            "description": "<p>Does driver accomdate riders with: col_wheelchair.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "service_animal",            "description": "<p>Does driver accomdate riders with: service_animal.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "oxygen",            "description": "<p>Does driver accomdate riders with: oxygen.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "cpr",            "description": "<p>Does driver accomdate riders with: cpr needs.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "complete",            "description": "<p>Did driver complete the profile build.</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Drivers db id.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/driver.router.js",    "groupTitle": "Driver",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ],        "Error 5xx": [          {            "group": "Error 5xx",            "optional": false,            "field": "ServerError",            "description": "<p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/driver/vehiclephoto",    "title": "Update Driver Vehicle Photo",    "name": "DriverVehiclePhoto",    "group": "Driver",    "version": "1.0.0",    "permission": [      {        "name": "user-driver"      }    ],    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "vehicle_photo_url",            "description": "<p>Drivers vehicle photo.</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "req.user.id",            "description": "<p>Drivers id.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/driver.router.js",    "groupTitle": "Driver",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ],        "Error 5xx": [          {            "group": "Error 5xx",            "optional": false,            "field": "ServerError",            "description": "<p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/register/driver",    "title": "Register Driver user and password to db",    "name": "DriverRegister",    "group": "Registration",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "saveUser.username",            "description": "<p>Rider's username</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "saveUser.password",            "description": "<p>Rider's password</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/register.router.js",    "groupTitle": "Registration",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ],        "Error 5xx": [          {            "group": "Error 5xx",            "optional": false,            "field": "ServerError",            "description": "<p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/register/rider",    "title": "Register rider user and password to db",    "name": "RiderRegister",    "group": "Registration",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "saveUser.username",            "description": "<p>Rider's username</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "saveUser.password",            "description": "<p>Rider's password</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/register.router.js",    "groupTitle": "Registration",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ],        "Error 5xx": [          {            "group": "Error 5xx",            "optional": false,            "field": "ServerError",            "description": "<p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/rider/update",    "title": "Update Rider Profile",    "name": "RiderUpdate",    "group": "Rider",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rider_first",            "description": "<p>Rider's first name.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rider_last",            "description": "<p>Rider's last name.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rider_street",            "description": "<p>Rider's street.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rider_city",            "description": "<p>Rider's city.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rider_state",            "description": "<p>Rider's state.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rider_cell",            "description": "<p>Rider's cell.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rider_email",            "description": "<p>Rider's email.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "elec_wheelchair",            "description": "<p>Does rider have an electric wheelchair.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "col_wheelchair",            "description": "<p>Does rider have a collapsable wheelchair.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "service_animal",            "description": "<p>Does rider have a service animal.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "oxygen",            "description": "<p>Does rider have an oxygen tank.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rider_addtl_info",            "description": "<p>Rider's additional information for driver.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "cg_first",            "description": "<p>Rider's Caregiver first name.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "cg_last",            "description": "<p>Rider's Caregiver last name.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "cg_relationship",            "description": "<p>Riders Caregiver relationship to rider.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "cg_cell",            "description": "<p>Rider's Caregiver cell number.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "cg_email",            "description": "<p>Rider's Caregiver email.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "cg_orders_rides",            "description": "<p>Gives Caregiver authority to order rides.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "cg_financial_auth",            "description": "<p>Gives Caregiver authority over payments and financial information.</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "cg_notifications",            "description": "<p>Caregiver gets notifications when rider picked up and dropped off.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "med_id",            "description": "<p>Rider's medical ID</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "metmo_id",            "description": "<p>Rider's Metro Mobility ID</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "credit_card_num",            "description": "<p>Rider's Credit Card Number</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "credit_cvc",            "description": "<p>Rider's Credit Card security number</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "credit_expdate",            "description": "<p>Rider's Credit Card Exp Date</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "complete",            "description": "<p>Rider's profile complete, If yes Rider will not be prompted to set up profile on first login.</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Rider's db id.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/rider.router.js",    "groupTitle": "Rider",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ],        "Error 5xx": [          {            "group": "Error 5xx",            "optional": false,            "field": "ServerError",            "description": "<p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/rider/photo",    "title": "Update Rider Profile photo",    "name": "RiderUpdatePhoto",    "group": "Rider",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rider.rider_photo_url",            "description": "<p>Rider's picture from filestack.</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "req.user.id",            "description": "<p>Rider's db id.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/rider.router.js",    "groupTitle": "Rider",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ],        "Error 5xx": [          {            "group": "Error 5xx",            "optional": false,            "field": "ServerError",            "description": "<p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "post",    "url": "/rider/destAB",    "title": "Send Location data for Rider to the Database.",    "name": "RiderUpdatePhoto",    "group": "Rider",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "rider_id",            "description": "<p>Rider's db id.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "start_location",            "description": "<p>Rider's pickup location.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "end_location",            "description": "<p>Rider's dropoff location.</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "rider_note",            "description": "<p>Rider's Additional note to driver about the current ride.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/rider.router.js",    "groupTitle": "Rider",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ],        "Error 5xx": [          {            "group": "Error 5xx",            "optional": false,            "field": "ServerError",            "description": "<p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/trip/accept",    "title": "Driver \"Accepts\" rider via socket request",    "name": "Accept_Rider",    "group": "Trip",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "boolean",            "optional": false,            "field": "accept",            "description": "<p>Edits trip info that connects driver and rider when they hit accept.</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Rider's db id.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/trip.router.js",    "groupTitle": "Trip",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ],        "Error 5xx": [          {            "group": "Error 5xx",            "optional": false,            "field": "ServerError",            "description": "<p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/trip/complete",    "title": "Driver \"completes\" rider trip via socket request",    "name": "Complete_Rider",    "group": "Trip",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "boolean",            "optional": false,            "field": "complete",            "description": "<p>Edits trip info that completes the trip</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Rider's db id.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/trip.router.js",    "groupTitle": "Trip",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ],        "Error 5xx": [          {            "group": "Error 5xx",            "optional": false,            "field": "ServerError",            "description": "<p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/trip/delete-incomplete",    "title": "if rider navigates to a different page or leaves the app it will delete that trip from db",    "name": "Delete_incomplete_trips",    "group": "Trip",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "boolean",            "optional": false,            "field": "complete",            "description": "<p>trip info if rider has been dropped off will be true</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "rider_id",            "description": "<p>Rider's db id.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/trip.router.js",    "groupTitle": "Trip",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ],        "Error 5xx": [          {            "group": "Error 5xx",            "optional": false,            "field": "ServerError",            "description": "<p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "get",    "url": "/trip/match",    "title": "Match rider to driver base on driver being live.",    "name": "Match_Rider",    "group": "Trip",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "string",            "optional": false,            "field": "start_location::geometry",            "description": "<p>starting location to base matching logic on</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "elec_wheelchair",            "description": "<p>used for matching query if checked on registration page</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "col_wheelchair",            "description": "<p>used for matching query if checked on registration page</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "service_animal",            "description": "<p>used for matching query if checked on registration page</p>"          },          {            "group": "Parameter",            "type": "Boolean",            "optional": false,            "field": "oxygen",            "description": "<p>used for matching query if checked on registration page</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Rider's db id.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/trip.router.js",    "groupTitle": "Trip",    "error": {      "fields": {        "Error 4xx": [          {            "group": "Error 4xx",            "optional": false,            "field": "UserNotFound",            "description": "<p>The <code>id</code> of the User was not found.</p>"          }        ],        "Error 5xx": [          {            "group": "Error 5xx",            "optional": false,            "field": "ServerError",            "description": "<p>The server encountered an unexpected condition which prevented it from fulfilling the request.</p>"          }        ]      },      "examples": [        {          "title": "Error-Response:",          "content": "HTTP/1.1 404 Not Found\n{\n  \"error\": \"UserNotFound\"\n}",          "type": "json"        }      ]    }  },  {    "type": "put",    "url": "/trip/pickup",    "title": "Driver \"Picks Up\" rider via socket request",    "name": "Pickup_Rider",    "group": "Trip",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "boolean",            "optional": false,            "field": "pickup",            "description": "<p>Edits trip info that turns pickup to true.</p>"          },          {            "group": "Parameter",            "type": "Integer",            "optional": false,            "field": "id",            "description": "<p>Rider's db id.</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "StatusCode",            "description": "<p>Return status code to client.</p>"          }        ]      }    },    "filename": "server/routes/trip.router.js",    "groupTitle": "Trip"  }]
